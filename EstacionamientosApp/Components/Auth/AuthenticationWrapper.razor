@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation

@if (isAuthenticated)
{
    @ChildContent
}
else
{
    <div class="min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900 flex items-center justify-center">
        <div class="text-center">
            <!-- Loading Spinner -->
            <div class="relative mb-8">
                <div class="w-20 h-20 border-4 border-white/20 border-t-white rounded-full animate-spin mx-auto"></div>
                <div class="absolute inset-0 w-20 h-20 border-4 border-transparent border-t-indigo-400 rounded-full animate-spin mx-auto" style="animation-delay: -0.5s;"></div>
            </div>
            
            <!-- Loading Text -->
            <div class="text-white">
                <h2 class="text-2xl font-bold mb-2 font-poppins">Verificando autenticación</h2>
                <p class="text-white/80">Por favor espere un momento...</p>
            </div>
            
            <!-- Animated Dots -->
            <div class="flex justify-center space-x-2 mt-6">
                <div class="w-2 h-2 bg-white/60 rounded-full animate-bounce"></div>
                <div class="w-2 h-2 bg-white/60 rounded-full animate-bounce" style="animation-delay: 0.1s;"></div>
                <div class="w-2 h-2 bg-white/60 rounded-full animate-bounce" style="animation-delay: 0.2s;"></div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }
    
    private bool isAuthenticated = false;
    private bool isLoading = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await CheckAuthentication();
        }
    }

    private async Task CheckAuthentication()
    {
        try
        {
            var authStatus = await JSRuntime.InvokeAsync<string>("sessionStorage.getItem", "isAuthenticated");
            
            if (string.IsNullOrEmpty(authStatus) || authStatus != "true")
            {
                // No está autenticado, redirigir al login
                Navigation.NavigateTo("/login", true);
                return;
            }

            isAuthenticated = true;
            isLoading = false;
            StateHasChanged();
        }
        catch (Exception)
        {
            // Error al verificar autenticación, redirigir al login
            Navigation.NavigateTo("/login", true);
        }
    }
}